/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from "@tanstack/react-router";

// Import Routes

import { Route as rootRoute } from "./routes/__root";
import { Route as InitialImport } from "./routes/_initial";
import { Route as AuthImport } from "./routes/_auth";
import { Route as IndexImport } from "./routes/index";
import { Route as InitialLogInImport } from "./routes/_initial/logIn";
import { Route as InitialChooseDeskImport } from "./routes/_initial/chooseDesk";
import { Route as AuthAppImport } from "./routes/_auth/_app";
import { Route as AuthAppDashboardImport } from "./routes/_auth/_app/dashboard";

// Create Virtual Routes

const DisplayLazyImport = createFileRoute("/display")();
const AuthKioskLazyImport = createFileRoute("/_auth/kiosk")();

// Create/Update Routes

const DisplayLazyRoute = DisplayLazyImport.update({
  path: "/display",
  getParentRoute: () => rootRoute,
} as any).lazy(() => import("./routes/display.lazy").then((d) => d.Route));

const InitialRoute = InitialImport.update({
  id: "/_initial",
  getParentRoute: () => rootRoute,
} as any);

const AuthRoute = AuthImport.update({
  id: "/_auth",
  getParentRoute: () => rootRoute,
} as any);

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any);

const AuthKioskLazyRoute = AuthKioskLazyImport.update({
  path: "/kiosk",
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import("./routes/_auth/kiosk.lazy").then((d) => d.Route));

const InitialLogInRoute = InitialLogInImport.update({
  path: "/logIn",
  getParentRoute: () => InitialRoute,
} as any);

const InitialChooseDeskRoute = InitialChooseDeskImport.update({
  path: "/chooseDesk",
  getParentRoute: () => InitialRoute,
} as any).lazy(() =>
  import("./routes/_initial/chooseDesk.lazy").then((d) => d.Route),
);

const AuthAppRoute = AuthAppImport.update({
  id: "/_app",
  getParentRoute: () => AuthRoute,
} as any);

const AuthAppDashboardRoute = AuthAppDashboardImport.update({
  path: "/dashboard",
  getParentRoute: () => AuthAppRoute,
} as any).lazy(() =>
  import("./routes/_auth/_app/dashboard.lazy").then((d) => d.Route),
);

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth": {
      preLoaderRoute: typeof AuthImport;
      parentRoute: typeof rootRoute;
    };
    "/_initial": {
      preLoaderRoute: typeof InitialImport;
      parentRoute: typeof rootRoute;
    };
    "/display": {
      preLoaderRoute: typeof DisplayLazyImport;
      parentRoute: typeof rootRoute;
    };
    "/_auth/_app": {
      preLoaderRoute: typeof AuthAppImport;
      parentRoute: typeof AuthImport;
    };
    "/_initial/chooseDesk": {
      preLoaderRoute: typeof InitialChooseDeskImport;
      parentRoute: typeof InitialImport;
    };
    "/_initial/logIn": {
      preLoaderRoute: typeof InitialLogInImport;
      parentRoute: typeof InitialImport;
    };
    "/_auth/kiosk": {
      preLoaderRoute: typeof AuthKioskLazyImport;
      parentRoute: typeof AuthImport;
    };
    "/_auth/_app/dashboard": {
      preLoaderRoute: typeof AuthAppDashboardImport;
      parentRoute: typeof AuthAppImport;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AuthRoute.addChildren([
    AuthAppRoute.addChildren([AuthAppDashboardRoute]),
    AuthKioskLazyRoute,
  ]),
  InitialRoute.addChildren([InitialChooseDeskRoute, InitialLogInRoute]),
  DisplayLazyRoute,
]);

/* prettier-ignore-end */
